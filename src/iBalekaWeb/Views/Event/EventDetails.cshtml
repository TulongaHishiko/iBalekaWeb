@model iBalekaWeb.Models.EventViewModels.EventViewModel
@using iBalekaWeb.Models.EventViewModels
<style>
    body {
        overflow-y: visible;
    }
</style>

@{
    ViewData["Title"] = "Event Details";


}

<div class="container">
    <div>
        <h2 class="center-align">@ViewData["Title"]</h2>
    </div>

    <div class="row">
        <div class="col s6 left-align">
            <h5 class="left-align">Event Details</h5>
            @if (Model.ClubName != null)
            {
                <div class="row">
                    @Html.LabelFor(model => model.ClubName, "Club Name", new { @class = "right-align flow-text" }):
                    <span class="left-align flow-text">@Html.DisplayFor(model => model.ClubName)</span>
                </div>
            }
            <div class="row">
                @Html.LabelFor(model => model.Title, "Title", new { @class = "right-align flow-text" }):
                <span class="left-align flow-text">@Html.DisplayFor(model => model.Title)</span>
            </div>
            <div class="row">
                @Html.LabelFor(model => model.Description, "Description", new { @class = "right-align flow-text" }):
                <span class="left-align flow-text">@Html.DisplayFor(model => model.Description)</span>
            </div>
            <div class="row">
                @Html.LabelFor(model => model.Date, "Date", new { @class = "right-align flow-text" }):
                <span class="left-align flow-text">@Html.DisplayFor(model => model.Date)</span>
            </div>
            <div class="row">
                @Html.LabelFor(model => model.Time, "Time", new { @class = "right-align flow-text" }):
                <span class="left-align flow-text">@Html.DisplayFor(model => model.Time)</span>
            </div>
            <div class="row">
                @Html.LabelFor(model => model.Location, "Location", new { @class = "right-align flow-text" }):
                <span class="left-align flow-text">@Html.DisplayFor(model => model.Location)</span>
            </div>
            <div class="row">
                @Html.LabelFor(model => model.DateCreated, "DateCreated", new { @class = "right-align flow-text" }):
                <span class="left-align flow-text">@Html.DisplayFor(model => model.DateCreated)</span>
            </div>
            <div class="row">
                @Html.LabelFor(model => model.DateModified, "DateModified", new { @class = "right-align flow-text" }):
                <span class="left-align flow-text">@Html.DisplayFor(model => model.DateModified)</span>
            </div>
        </div>
        <div class="col s6 center-align">
            <h5>Event Routes</h5>
            <div class="row">
                <ul class="collection">
                    @if (Model.EventRoutes.Count > 0)
                    {
                        foreach (EventRouteViewModel item in Model.EventRoutes)
                        {
                            string totalDistance = "";
                            //total distance conversion
                            if (item.Distance > 999)
                            {
                                totalDistance = Math.Round((item.Distance / 1000), 2).ToString() + "km";
                            }
                            else
                            {
                                totalDistance = item.Distance.ToString() + "m";
                            }
                    <li class="collection-item avatar">
                        <div class="title">
                            @Html.ActionLink(item.Title, "EditRoute", new { id = item.RouteId }, new { @class = "red-text text-darken-2" })

                        </div>
                        <p>
                            <a class="badge">
                                @totalDistance


                            </a>
                        </p>
                    </li>
                        }
                    }

                </ul>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col s4 left-align ">
            <a class="btn waves-effect waves-light btn-large red accent-3" asp-action="Events">
                Back to List
            </a>
        </div>
        <div class="col s4 center-align ">
            @Html.ActionLink("Edit", "EditEvent", new { id = Model.EventId }, new { @class = "btn waves-effect waves-light btn-large red accent-3" })

        </div>
        <div class="col s4 right-align ">
            @Html.ActionLink("Delete", "DeleteEvent", new { id = Model.EventId }, new { @class = "btn waves-effect waves-light btn-large red accent-3" })
        </div>
    </div>
</div>
<script src="/lib/jquery/dist/jquery.js"></script>
<script>
    $(document).ready(function () {
        var source = '@(ViewBag.SourcePageEvent)';
        if  (source!= null) {
                if (source == "Edit") {
                    var $toastContent = $('<span>Event was successfully Updated...</span>');
                    Materialize.toast($toastContent, 5000);
                    source = null;
                }
            }
        });
d</script>

